# Etapa 1: Build da aplicaÃ§Ã£o
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /app

# ðŸ”¹ Copia todos os arquivos da soluÃ§Ã£o (.sln) e de projetos (.csproj)
COPY *.sln ./
COPY NotifyMed.API/*.csproj NotifyMed.API/
COPY NotifyMed.Application/*.csproj NotifyMed.Application/
COPY NotifyMed.Domain/*.csproj NotifyMed.Domain/
COPY NotifyMed.Infrastructure/*.csproj NotifyMed.Infrastructure/
COPY NotifyMed.Tests/*.csproj NotifyMed.Tests/

# ðŸ”¹ Restaura as dependÃªncias
RUN dotnet restore NotifyMed.API/NotifyMed.API.csproj

# ðŸ”¹ Copia o restante do cÃ³digo
COPY . ./

# ðŸ”¹ Compila a aplicaÃ§Ã£o
RUN dotnet publish NotifyMed.API/NotifyMed.API.csproj -c Release -o /publish

# Etapa 2: Runtime otimizado para execuÃ§Ã£o
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# ðŸ”¹ Copia os arquivos compilados
COPY --from=build /publish .

# ðŸ”¹ Define o ambiente
ENV ASPNETCORE_ENVIRONMENT=Development
ENV ASPNETCORE_URLS=http://+:80

# ðŸ”¹ Expor a porta da API
EXPOSE 80

# ðŸ”¹ Comando para iniciar a API
ENTRYPOINT ["dotnet", "NotifyMed.API.dll"]
